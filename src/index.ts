// 重新构思后的计划表
/**
 * 信息的收集
 *
 *    一、错误信息
 *        (1) window.onerror
 *        (2) unhandledrejection
 *        (3) try / catch (劫持原生方法，使用try / catch 绕过?)
 *        (4) 其他技术栈(这个可能得整合上面的 最后再注入)
 *
 *    二、环境信息
 *        (1) 业务信息(版本 sdk ....)
 *        (2) 设备信息
 *        (3) 网络信息
 *        (4) SDK信息
 *
 *    三、行为信息
 *        (1) 用户信息(点击 还是什么操作)
 *        (2) 浏览器行为
 *            1. XMLRequest
 *            2. window.onpopstate
 *        (3) 控制台行为 console 对象的方法
 *
 *    四、性能信息
 *
 * 上报方法
 *
 *    使用1x1的gif图
 * 
 *    ajax
 *
 * 上报的策略
 *
 *    一、 即时上报 错误类型? promise 和 error 都直接上报了
 *
 *    二、 批量上报
 *
 *    三、 区块上报
 *
 *    四、 用户反馈?(暂时不考虑)
 *
 *
 * 1. 解决 第一个问题 如何筛选 相同的操作 (判断类型 和 data 里面的 stack栈?)
 *
 * 2. 上报的时候 怎么做到LRU
 *
 * 3. 需要一个全局的Context? 方便后续的扩展 和 共享全局属性?
 * 
 * 4. Navigator.sendBeacon 解决用户页面卸载后 发送异步请求
 */
